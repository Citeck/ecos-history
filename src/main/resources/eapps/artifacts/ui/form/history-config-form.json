{
  "id": "history-config-form",
  "formKey": "",
  "title": {
    "ru": "Форма конфигурации истории",
    "en": "History config form"
  },
  "description": {},
  "customModule": "",
  "typeRef": "",
  "width": "",
  "system": false,
  "i18n": {},
  "definition": {
    "components": [
      {
        "scrollableContent": true,
        "key": "panel2",
        "type": "panel",
        "input": false,
        "components": [
          {
            "label": {
              "ru": "Отключить историю",
              "en": "Disable history"
            },
            "key": "disableHistory",
            "refreshOn": [],
            "optionalWhenDisabled": false,
            "type": "checkbox",
            "input": true
          },
          {
            "label": {
              "ru": "Panel"
            },
            "key": "settings",
            "refreshOn": [],
            "optionalWhenDisabled": false,
            "conditional": {
              "show": "false",
              "when": "disableHistory",
              "eq": "true"
            },
            "type": "panel",
            "input": false,
            "components": [
              {
                "label": {
                  "ru": "Исключенные атрибуты",
                  "en": "Excluded attributes"
                },
                "key": "excludedAtts",
                "multiple": true,
                "reorder": false,
                "dataSrc": "custom",
                "data": {
                  "custom": "const typeAtts = _.get(instance, 'root.parentForm.data.attributesOptions.attributes', []);\n\nif (typeAtts.length) {\n    values = typeAtts;\n} else {\n    //legacy solution. will be removed in future releases\n    const getAttrs = (form) => {\n        const parent = form.parentForm;\n\n        const attrs = _.get(parent, 'data.modelAttributes');\n\n        if (_.isUndefined(attrs) && parent) {\n            return getAttrs(parent);\n        }\n\n        return attrs;\n    };\n\n    values = (getAttrs(instance.root) || []).map(item => item.id);\n}",
                  "headers": [
                    {}
                  ]
                },
                "defaultValue": "",
                "optionalWhenDisabled": false,
                "type": "ecosSelect",
                "input": true
              },
              {
                "label": {
                  "ru": "Атрибуты для записи истории при создании",
                  "en": "Attributes to record history on creation"
                },
                "key": "onCreationHistoricalAtts",
                "multiple": true,
                "reorder": false,
                "dataSrc": "custom",
                "data": {
                  "custom": "const typeAtts = _.get(instance, 'root.parentForm.data.attributesOptions.attributes', []);\n\nif (typeAtts.length) {\n    values = typeAtts;\n} else {\n    //legacy solution. will be removed in future releases\n    const getAttrs = (form) => {\n        const parent = form.parentForm;\n\n        const attrs = _.get(parent, 'data.modelAttributes');\n\n        if (_.isUndefined(attrs) && parent) {\n            return getAttrs(parent);\n        }\n\n        return attrs;\n    };\n\n    values = (getAttrs(instance.root) || []).map(item => item.id);\n}",
                  "headers": [
                    {}
                  ]
                },
                "defaultValue": "",
                "optionalWhenDisabled": false,
                "type": "ecosSelect",
                "input": true
              }
            ]
          }
        ]
      },
      {
        "label": {
          "ru": "Columns"
        },
        "key": "columns2",
        "columns": [
          {
            "components": [
              {
                "label": "Cancel",
                "action": "event",
                "state": "",
                "showValidations": false,
                "event": "cancel",
                "block": true,
                "type": "button",
                "input": true,
                "key": "submit2",
                "conditional": {
                  "show": null,
                  "when": null
                }
              }
            ],
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "md": 3,
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            },
            "index": 0
          },
          {
            "components": [],
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            },
            "index": 1,
            "md": 3
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "label": "Column",
            "components": [],
            "clearOnHide": true,
            "conditional": {
              "show": null,
              "when": null
            },
            "index": 2
          },
          {
            "md": 3,
            "type": "column",
            "input": false,
            "key": "column",
            "index": 3,
            "components": [
              {
                "label": {
                  "en": "Save",
                  "ru": "Сохранить"
                },
                "key": "submit",
                "state": "",
                "theme": "primary",
                "block": true,
                "disableOnInvalid": true,
                "refreshOn": [],
                "optionalWhenDisabled": false,
                "type": "button",
                "input": true,
                "headers": [
                  {}
                ]
              }
            ]
          }
        ],
        "oneColumnInViewMode": false,
        "type": "columns",
        "input": false
      }
    ],
    "formId": "history-config-form"
  },
  "attributes": {},
  "notExists": false
}
